// <auto-generated />
using System;
using EquipmentDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EquipmentDatabase.Migrations
{
    [DbContext(typeof(EquipmentContext))]
    partial class EquipmentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EquipmentDatabase.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CommonItemRaretyRaretyId")
                        .HasColumnType("int");

                    b.Property<int>("ItemDurability")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemTypeTypeId")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("CommonItemRaretyRaretyId");

                    b.HasIndex("ItemTypeTypeId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("EquipmentDatabase.Properties", b =>
                {
                    b.Property<int>("PropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Property")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UniqueItemUniqueId")
                        .HasColumnType("int");

                    b.HasKey("PropertyId");

                    b.HasIndex("ItemId");

                    b.HasIndex("UniqueItemUniqueId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("EquipmentDatabase.Rareties", b =>
                {
                    b.Property<int>("RaretyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaxPoints")
                        .HasColumnType("int");

                    b.Property<string>("Rarety")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RaretyId");

                    b.ToTable("Rarety");
                });

            modelBuilder.Entity("EquipmentDatabase.Types", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeId");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("EquipmentDatabase.UniqueItem", b =>
                {
                    b.Property<int>("UniqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UniqueItemDurability")
                        .HasColumnType("int");

                    b.Property<string>("UniqueItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UniqueItemRaretyRaretyId")
                        .HasColumnType("int");

                    b.Property<int?>("UniqueItemTypeTypeId")
                        .HasColumnType("int");

                    b.HasKey("UniqueId");

                    b.HasIndex("UniqueItemRaretyRaretyId");

                    b.HasIndex("UniqueItemTypeTypeId");

                    b.ToTable("UniqueItems");
                });

            modelBuilder.Entity("EquipmentDatabase.Item", b =>
                {
                    b.HasOne("EquipmentDatabase.Rareties", "CommonItemRarety")
                        .WithMany()
                        .HasForeignKey("CommonItemRaretyRaretyId");

                    b.HasOne("EquipmentDatabase.Types", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeTypeId");
                });

            modelBuilder.Entity("EquipmentDatabase.Properties", b =>
                {
                    b.HasOne("EquipmentDatabase.Item", null)
                        .WithMany("ItemProperty")
                        .HasForeignKey("ItemId");

                    b.HasOne("EquipmentDatabase.UniqueItem", null)
                        .WithMany("UniqueItemProperty")
                        .HasForeignKey("UniqueItemUniqueId");
                });

            modelBuilder.Entity("EquipmentDatabase.UniqueItem", b =>
                {
                    b.HasOne("EquipmentDatabase.Rareties", "UniqueItemRarety")
                        .WithMany()
                        .HasForeignKey("UniqueItemRaretyRaretyId");

                    b.HasOne("EquipmentDatabase.Types", "UniqueItemType")
                        .WithMany()
                        .HasForeignKey("UniqueItemTypeTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
